 ______     ______   _______                   ____    ____  _______  _____  
|_   _ \  .' ____ \ |_   __ \                 |_   \  /   _||_   __ \|_   _| 
  | |_) | | (___ \_|  | |__) | .--.   _ .--.    |   \/   |    | |__) | | |   
  |  __'.  _.____`.   |  ___// .'`\ \[ `.-. |   | |\  /| |    |  ___/  | |   
 _| |__) || \____) | _| |_   | \__. | | | | |  _| |_\/_| |_  _| |_    _| |_  
|_______/  \______.'|_____|   '.__.' [___||__]|_____||_____||_____|  |_____| 


Introduction
============

BSPonMPI offers on any parallel machine supporting MPI a parallel programming
API that adheres to the BSP cost-model. This API is better known as BSPlib and
supports Single Program Multiple Data (SPMD) style programs that communicate
using Direct Remote Memory Access (DRMA) and Bulk Synchronous Message Passing
(BSMP). This library enables immortal algorithms that once written are
scalable everywhere, since the BSP-cost model prescribes that a program's
run-time is bounded by 

                                W + g H + L S

where W, the local computation, H, the total communiation volume, and S, the
number of supersteps, are determined by the program and g, the message gap
(i.e. reciprocal throughput), and L, the latency, are determined by the
machine. 

Getting Started
===============

Prerequisites
-------------
  - CMake version 3.7

  - An MPI-2 implementation, such as MPICH, OpenMPI, MVAPICH, IBM Platform,
    Intel MPI, Microsoft MPI.
    (note: When using a Linux package manager, make sure you get the '-devel'
     package)

  - A C and C++ compiler
   
  - (Optional) Doxygen for generating MAN pages and browseable HTML of the API.

(read section below on Linux distribution specific hints)


Installation
------------

  - Unpack the source in some directory, e.g. $SRCDIR
  
  - Make a build directory, e.g. $BUILDDIR

  - Think of a place to install the library, e.g. $INSTALLDIR

  - Then execute the following commands

           $ cd $BUILDDIR
          
           $ cmake -DCMAKE_INSTALL_PREFIX=$INSTALLDIR $SRCDIR 

           $ make install
  

Compiling programs
------------------

Assuming you have a source file helloworld.c, you can compile it as follows
  
  $ bspcc helloworld.c -o helloworld

Likewise, if you have a C++ source file helloworld.cpp, you can do

  $ bspcxx helloworld.cpp -o helloworld


Running programs
----------------

Programs can be run through the bsprun command, which is a simple replacement
for mpirun

  $ bsprun -n 5 ./helloworld



OS specific installation hints
==============================================

Mac OS X / macOS / Darwin
-------------------------
The MacPorts collection provides easy access to Unix development tools, which
are necessary to build, install, and use BSPonMPI. See https://macports.org
MacPorts also needs Xcode to be installed. Once you have both installed, 
you can install the required dependencies through MacPorts: 

 $ sudo port install cmake mpich-devel-default doxygen

See the previous installation section how to proceed installation.


CentOS 7
--------

To install the necessary prerequisites do:

  $ sudo yum install epel-release
 
then do

  $ sudo yum install cmake3 mpich-devel

Then before you can run the cmake commands, you have to load MPI into your
shell environment

  $ module load mpi



Ubuntu 18.04 LTS (Bionic Beaver)
--------------------------------

Make sure you have CMake, Doxygen, and an MPI installed. E.g. do

  $ sudo apt install cmake doxygen mpich doxygen

